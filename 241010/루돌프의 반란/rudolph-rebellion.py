"""
1 ~ P 명의 산타. 
N x N 크기의 격자. r,c 형태로 표현 좌 상단은 1,1
M번의 턴. 턴마다 루돌프와 산타들이 한 번 씩 움직임.
루돌프가 한 번 움직임 -> 1번 산타부터 P번 산타가지 순서대로 움직이게 됨.
기절해있는 산타 or 격자 밖으로 빠져나가 게임에서 탈락한 산타는 못움직임.

1) 루돌프의 움직임. 
 - 가장 가까운 산태를 향해 1칸 돌진 (거리 계산 함수)
 - 게임에서 탈락하지 않은 산타중에 가장 가까운 산타
 - 가까운 산타가 2명 이상이면 r좌표가 큰 산타를 향해, c좌표가 큰 산타를 향해
 - 8 방향 돌진 -> 우선 순위가 높은 산타를 향해, 가장 가까워지는 방향으로

2) 산타의 움직임
 - 1번부터 P번 까지 순서대로 움직임
 - 기절하거나 게임에 탈락했으면 움직일수 없음.
 - 산타는 루돌프에게 거리가 가장 가까워지는 방향으로 1칸이동
 - 산타는 다른 산타가 있거나 게임판 밖으로는 못움직임
 - 움직일 수 있는 칸이 없으면 산타는 못움직임
 - 칸이 있더라도 루돌프로부터 가까워질 수 있는 방법이 없으면 산타는 못움직임
 - 4방향 움직임. 방향이 여러개면 상우하좌 순

3) 충돌
 - 산타와 루돌프 위치가 같으면 충돌 발생
 - 루돌프가 움직여서 충돌 -> 산타가 c점수 얻음 -> 루돌프가 온 방향으로 C칸 밀림
 - 산타가 움직여서 충돌 -> 반대 방향으로 D칸 -> D점수 얻음
 - 이동하는 도중에 충돌이 일어나지 않음
 - 게임 밖 -> 탈락
 - 산타가 있으면 ? -> 상호작용
4)상호작용
 - 다른 산타가 1반 밀림 -> 그 옆에 또 있으면 연쇄 작용
5) 기절
 - 산타는 루돌프와 충돌 후 기절을 함. 현재가 K 턴이라면, K+1 번째까지 턴까지 기절
 - 충돌이나 상호작용으로 밀려날 수 있음
 - 루돌프는 기절 산타를 돌진으로 선택 가능
6 ) 게임 종료 
 - P명의 산타가 모두 탈락하면 즉시 종료
 - 매턴 탈락하지 않은 산타는 1점씩
"""
#8방향
Rdx = [1,-1,0,0,-1,-1,1,1]
Rdy = [0,0,1,-1,-1,1,-1,1]
#4방향
Sdx = [1,-1,0,0]
Sdy = [0,0,1,-1]

class Rudolph:
    def __init__(self,x,y,power):
        self.x = x
        self.y = y
        self.power = power
    def move(x,y):
       if grid[x][y] == 2: # 산타랑 부딛힘.
    def 
class Santa:
    is_stun = False
    score = 0
    power = 0
    def __init__(self,idx,x,y):
        self.idx = idx
        self.x = x
        self.y = y

def get_distance(x1,y1,x2,y2):
    return (x1-x2)**2 + (y1-y2)**2

#0 : 빈공간 1 : 루돌프 2 : 산타
grid = [[0] * N for _ in range(N)]

# N, M, P, C, D
N, M, P, C, D = tuple(map(int,input().split()))
Rr, Rc = tuple(map(int,input().split()))
rudolph = Rudolph(Rr,Rc,C)
grid[Rr][Rc] = 1

santa = []

for _ in range(P):
    Si, Sr, Sc = tuple(input().split())
    santa.append(Santa(Sr,Sc,Si))
    grid[Sr][Sc] = 2
Santa.power = D

for _ in range(M):